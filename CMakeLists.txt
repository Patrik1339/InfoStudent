cmake_minimum_required(VERSION 3.31)
project(InfoStudent)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

set(CMAKE_PREFIX_PATH "D:/Qt/6.9.0/mingw_64/lib/cmake")

find_package(Qt6 COMPONENTS
        Core
        Gui
        Widgets
        REQUIRED)

add_executable(InfoStudent main.cpp
        GUI/MainWindow.cpp
        GUI/MainWindow.h
        Domeniu/User.cpp
        Domeniu/User.h
        Repository/Repository.cpp
        Repository/Repository.h
        Erori/RepositoryError.h
        Service/Service.cpp
        Service/Service.h
        GUI/UserWindow.h
        GUI/StudentWindow.cpp
        GUI/StudentWindow.h
        Domeniu/Nota.cpp
        Domeniu/Nota.h
        Domeniu/Materie.cpp
        Domeniu/Materie.h
        Repository/sqlite3.c
        Repository/sqlite3.h
        Domeniu/Student.cpp
        Domeniu/Student.h
        Domeniu/Profesor.cpp
        Domeniu/Profesor.h
        GUI/Model.h
        GUI/ProfesorWindow.cpp
        GUI/ProfesorWindow.h
        GUI/ModelTabelMaterii.h
        GUI/AdminWindow.cpp
        GUI/AdminWindow.h
        GUI/ModelGeneral.h
        Validator/Validator.h
        Erori/ValidationError.h
)
target_link_libraries(InfoStudent
        Qt::Core
        Qt::Gui
        Qt::Widgets
)

if (WIN32 AND NOT DEFINED CMAKE_TOOLCHAIN_FILE)
    set(DEBUG_SUFFIX)
    if (MSVC AND CMAKE_BUILD_TYPE MATCHES "Debug")
        set(DEBUG_SUFFIX "d")
    endif ()
    set(QT_INSTALL_PATH "${CMAKE_PREFIX_PATH}")
    if (NOT EXISTS "${QT_INSTALL_PATH}/bin")
        set(QT_INSTALL_PATH "${QT_INSTALL_PATH}/..")
        if (NOT EXISTS "${QT_INSTALL_PATH}/bin")
            set(QT_INSTALL_PATH "${QT_INSTALL_PATH}/..")
        endif ()
    endif ()
    if (EXISTS "${QT_INSTALL_PATH}/plugins/platforms/qwindows${DEBUG_SUFFIX}.dll")
        add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E make_directory
                "$<TARGET_FILE_DIR:${PROJECT_NAME}>/plugins/platforms/")
        add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy
                "${QT_INSTALL_PATH}/plugins/platforms/qwindows${DEBUG_SUFFIX}.dll"
                "$<TARGET_FILE_DIR:${PROJECT_NAME}>/plugins/platforms/")
    endif ()
    foreach (QT_LIB Core Gui Widgets)
        add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy
                "${QT_INSTALL_PATH}/bin/Qt6${QT_LIB}${DEBUG_SUFFIX}.dll"
                "$<TARGET_FILE_DIR:${PROJECT_NAME}>")
    endforeach (QT_LIB)
endif ()
